name: Publish
on:
  push:
    branches:
      - 'snz-main'
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch: # Manual trigger

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          package_json_file: package.json
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup git credentials
        run: |
          git config --global user.email "ci@streamliners.co.nz"
          git config --global user.name "Streamliners CI"

      # Configure AWS credentials step
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      # Get CodeArtifact authorization token
      - name: Get CodeArtifact token
        id: codeartifact-token
        run: |
          TOKEN=$(aws codeartifact get-authorization-token --domain streamliners-npm --domain-owner 368438108069 --query authorizationToken --output text)
          echo "CODEARTIFACT_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Build and publish TinaCMS packages
        run: |
          # Move to the TinaCMS directory
          cd packages/tinacms

          # Configure .npmrc for AWS CodeArtifact only
          echo "registry=https://streamliners-npm-368438108069.d.codeartifact.ap-southeast-2.amazonaws.com/npm/tina-cms-snz/" > ~/.npmrc
          echo "//streamliners-npm-368438108069.d.codeartifact.ap-southeast-2.amazonaws.com/npm/tina-cms-snz/:_authToken=${CODEARTIFACT_TOKEN}" >> ~/.npmrc

          # Install dependencies
          pnpm install --no-frozen-lockfile

          # Build all packages
          pnpm build

          # Generate type definitions
          pnpm types

          # Verify build succeeded
          test -f packages/@tinacms/datalayer/dist/index.js || (echo "Build failed - datalayer missing" && exit 1)

          # Stable publish for snz-main
          if [[ "$GITHUB_REF" == "refs/heads/snz-main" ]]; then
            echo "Publishing stable version"
            pnpm run version
            pnpm publish -r --no-git-checks --access public
          # Beta/preview publish for all other branches
          else
            echo "Publishing beta version"
            git checkout ${{ github.sha }}
            pnpm version:snapshot $(echo ${{ github.sha }} | cut -c1-7)
            pnpm publish -r --tag beta --no-git-checks --access public
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CODEARTIFACT_TOKEN: ${{ env.CODEARTIFACT_TOKEN }}

      - name: Summary
        if: always()
        run: |
          echo "📝 Build completed. Check above for publish status." >> $GITHUB_STEP_SUMMARY
